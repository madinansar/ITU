==76814== Memcheck, a memory error detector
==76814== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==76814== Using Valgrind-3.23.0-c54d316124-20240426 and LibVEX; rerun with -h for copyright info
==76814== Command: bin/main
==76814== Parent PID: 76789
==76814== 
--76814-- 
--76814-- Valgrind options:
--76814--    --leak-check=full
--76814--    --show-leak-kinds=all
--76814--    --track-origins=yes
--76814--    --verbose
--76814--    --log-file=valgrind-out.txt
--76814-- Contents of /proc/version:
--76814--   Linux version 6.10.4-linuxkit (root@buildkitsandbox) (gcc (Alpine 13.2.1_git20240309) 13.2.1 20240309, GNU ld (GNU Binutils) 2.42) #1 SMP Mon Aug 12 08:47:01 UTC 2024
--76814-- 
--76814-- Arch and hwcaps: ARM64, LittleEndian, v8-fhm-dpbcvadp-sha3-rdm-atomics-fp16-vfp16
--76814-- Page sizes: currently 4096, max supported 65536
--76814-- Valgrind library directory: /usr/libexec/valgrind
--76814-- Reading syms from /workspaces/ITU/4th semester/DataStructures/HW3_skeleton-2/bin/main
--76814-- Reading syms from /usr/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1
--76814--   Considering /usr/lib/debug/.build-id/87/f56b6017f1c24ff66cafa216127c8b154799bd.debug ..
--76814--   .. build-id is valid
--76814-- Reading syms from /usr/libexec/valgrind/memcheck-arm64-linux
--76814--    object doesn't have a dynamic symbol table
--76814-- Scheduler: using generic scheduler lock implementation.
--76814-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==76814== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-76814-by-???-on-b86d16e7e4d0
==76814== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-76814-by-???-on-b86d16e7e4d0
==76814== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-76814-by-???-on-b86d16e7e4d0
==76814== 
==76814== TO CONTROL THIS PROCESS USING vgdb (which you probably
==76814== don't want to do, unless you know exactly what you're doing,
==76814== or are doing some strange experiment):
==76814==   /usr/bin/vgdb --pid=76814 ...command...
==76814== 
==76814== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==76814==   /path/to/gdb bin/main
==76814== and then give GDB the following command
==76814==   target remote | /usr/bin/vgdb --pid=76814
==76814== --pid is optional if only one valgrind process is running
==76814== 
--76814-- REDIR: 0x401d280 (ld-linux-aarch64.so.1:strlen) redirected to 0x580c4a30 (???)
--76814-- REDIR: 0x401c780 (ld-linux-aarch64.so.1:strcmp) redirected to 0x580c4a84 (???)
--76814-- REDIR: 0x401c6c0 (ld-linux-aarch64.so.1:index) redirected to 0x580c4a58 (???)
--76814-- Reading syms from /usr/libexec/valgrind/vgpreload_core-arm64-linux.so
--76814-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-arm64-linux.so
--76814-- Reading syms from /usr/lib/aarch64-linux-gnu/libm.so.6
--76814-- Reading syms from /usr/lib/aarch64-linux-gnu/libc.so.6
--76814--   Considering /usr/lib/debug/.build-id/5c/8f998f04145b99f2b808e5679fee4bb785e2a5.debug ..
--76814--   .. build-id is valid
--76814-- REDIR: 0x4a09f20 (libc.so.6:memchr) redirected to 0x485078c (_vgnU_ifunc_wrapper)
--76814-- REDIR: 0x4a0d920 (libc.so.6:strlen) redirected to 0x485078c (_vgnU_ifunc_wrapper)
--76814-- REDIR: 0x4a0a160 (libc.so.6:memcpy) redirected to 0x485078c (_vgnU_ifunc_wrapper)
--76814-- REDIR: 0x4a0ab80 (libc.so.6:memset) redirected to 0x485078c (_vgnU_ifunc_wrapper)
--76814-- REDIR: 0x4a0dec0 (libc.so.6:rindex) redirected to 0x488dd20 (rindex)
--76814-- REDIR: 0x4a05c04 (libc.so.6:malloc) redirected to 0x4885400 (malloc)
--76814-- REDIR: 0x4a127c0 (libc.so.6:__GI_memset) redirected to 0x4892e00 (memset)
--76814-- REDIR: 0x4a0ba80 (libc.so.6:strchrnul) redirected to 0x4893a64 (strchrnul)
--76814-- REDIR: 0x4a11380 (libc.so.6:__GI_memcpy) redirected to 0x4890ad0 (__GI_memcpy)
--76814-- REDIR: 0x4a12f80 (libc.so.6:__GI_strlen) redirected to 0x488e6ec (__GI_strlen)
--76814-- REDIR: 0x4a064c4 (libc.so.6:free) redirected to 0x48884a0 (free)
==76814== Invalid read of size 4
==76814==    at 0x10976C: print_game_state (connect4.c:189)
==76814==    by 0x10AF1B: main (main.c:27)
==76814==  Address 0x14 is not stack'd, malloc'd or (recently) free'd
==76814== 
==76814== 
==76814== Process terminating with default action of signal 11 (SIGSEGV)
==76814==  Access not within mapped region at address 0x14
==76814==    at 0x10976C: print_game_state (connect4.c:189)
==76814==    by 0x10AF1B: main (main.c:27)
==76814==  If you believe this happened as a result of a stack
==76814==  overflow in your program's main thread (unlikely but
==76814==  possible), you can try to increase the size of the
==76814==  main thread stack using the --main-stacksize= flag.
==76814==  The main thread stack size used in this run was 8388608.
==76814== 
==76814== HEAP SUMMARY:
==76814==     in use at exit: 2,114 bytes in 4 blocks
==76814==   total heap usage: 18 allocs, 14 frees, 2,576 bytes allocated
==76814== 
==76814== Searching for pointers to 4 not-freed blocks
==76814== Checked 103,048 bytes
==76814== 
==76814== 24 bytes in 1 blocks are still reachable in loss record 1 of 4
==76814==    at 0x488547C: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-arm64-linux.so)
==76814==    by 0x108E9F: make_move (connect4.c:71)
==76814==    by 0x10AEE7: main (main.c:25)
==76814== 
==76814== 42 bytes in 1 blocks are still reachable in loss record 2 of 4
==76814==    at 0x488547C: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-arm64-linux.so)
==76814==    by 0x108EFB: make_move (connect4.c:75)
==76814==    by 0x10AEE7: main (main.c:25)
==76814== 
==76814== 1,024 bytes in 1 blocks are still reachable in loss record 3 of 4
==76814==    at 0x488547C: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-arm64-linux.so)
==76814==    by 0x49DDDFF: _IO_file_doallocate (filedoalloc.c:101)
==76814==    by 0x49EDC8F: _IO_doallocbuf (genops.c:374)
==76814==    by 0x49EDC8F: _IO_doallocbuf (genops.c:369)
==76814==    by 0x49EBFEB: _IO_file_overflow@@GLIBC_2.17 (fileops.c:745)
==76814==    by 0x49ECA57: _IO_new_file_xsputn (fileops.c:1244)
==76814==    by 0x49ECA57: _IO_file_xsputn@@GLIBC_2.17 (fileops.c:1197)
==76814==    by 0x49BCE77: __printf_buffer_flush_to_file (printf_buffer_to_file.c:59)
==76814==    by 0x49BCF27: __printf_buffer_to_file_done (printf_buffer_to_file.c:120)
==76814==    by 0x49C6833: __vfprintf_internal (vfprintf-internal.c:1545)
==76814==    by 0x49BC543: printf (printf.c:33)
==76814==    by 0x108D9B: print_available_moves (connect4.c:45)
==76814==    by 0x10AE8F: main (main.c:18)
==76814== 
==76814== 1,024 bytes in 1 blocks are still reachable in loss record 4 of 4
==76814==    at 0x488547C: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-arm64-linux.so)
==76814==    by 0x49DDDFF: _IO_file_doallocate (filedoalloc.c:101)
==76814==    by 0x49EDC8F: _IO_doallocbuf (genops.c:374)
==76814==    by 0x49EDC8F: _IO_doallocbuf (genops.c:369)
==76814==    by 0x49EBC23: _IO_file_underflow@@GLIBC_2.17 (fileops.c:486)
==76814==    by 0x49EDD53: _IO_default_uflow (genops.c:389)
==76814==    by 0x10AEC7: main (main.c:22)
==76814== 
==76814== LEAK SUMMARY:
==76814==    definitely lost: 0 bytes in 0 blocks
==76814==    indirectly lost: 0 bytes in 0 blocks
==76814==      possibly lost: 0 bytes in 0 blocks
==76814==    still reachable: 2,114 bytes in 4 blocks
==76814==         suppressed: 0 bytes in 0 blocks
==76814== 
==76814== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==76814== 
==76814== 1 errors in context 1 of 1:
==76814== Invalid read of size 4
==76814==    at 0x10976C: print_game_state (connect4.c:189)
==76814==    by 0x10AF1B: main (main.c:27)
==76814==  Address 0x14 is not stack'd, malloc'd or (recently) free'd
==76814== 
==76814== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
